name: API TypeSpec Contract verification

on:
  push:
    branches: ["main"]
    paths:
      - src/**
      - .github/**
  pull_request:
    branches: ["main"]
    paths:
      - src/**
      - .github/**
env:
  ## These variables are shared across workflows, please configure in GitHub variables
  # Project code base dir, usually where the solution file resides. Example: ./src
  PROJECT_BASE_DIR: ${{ vars.PROJECT_BASE_DIR }}
  # Api project dir. Example: IST
  API_PROJECT_DIR: ${{ vars.API_PROJECT_DIR }}
  # Path to the Cadl dir. Example: ./cadl
  CADL_DIRNAME: ${{ vars.CADL_DIRNAME }}
  # Cadl filename used for comparison. Example: main.cadl
  CADL_FILENAME: ${{ vars.CADL_FILENAME }}
  # API assembly name. Example: API.dll
  API_ASSEMBLY_NAME: ${{ vars.API_ASSEMBLY_NAME }}
  
  # nswag generated openapi filename, used only for comparison inside the workflow
  CODE_OPENAPI_FILENAME: openapi.code.json
  # cadl generated openapi filename, used only for comparison inside the workflow
  CADL_OPENAPI_FILENAME: openapi.base.json
  # temporary directory used only for comparison inside the workflow
  OPENAPI_OUTPUT_DIRNAME: openapi-output
  # temporary directory for the api build
  DOTNET_ASSEMBLY_DIRNAME: build

jobs:
  contract-verification:
    name: API Contract Verification
    runs-on: ubuntu-latest
    steps:
      # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
      # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - run: npm ci
        working-directory: ${{ env.CADL_DIRNAME }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        working-directory: ${{ env.PROJECT_BASE_DIR }}
        run: dotnet restore

      - name: Build
        working-directory: ${{ env.PROJECT_BASE_DIR }}/${{ env.API_PROJECT_DIR }}
        run: dotnet build --no-restore -o ${DOTNET_ASSEMBLY_DIRNAME}

      - name: Generating API Contract from CADL
        working-directory: ${{ env.CADL_DIRNAME }}
        run: npx cadl compile ${{ env.CADL_FILENAME }} --output-dir ../../${{ env.OPENAPI_OUTPUT_DIRNAME }} --option "@cadl-lang/openapi3.output-file=${{ env.CADL_OPENAPI_FILENAME }}"

      - name: Generating API Contract from code
        working-directory: ${{ env.PROJECT_BASE_DIR }}/${{ env.API_PROJECT_DIR }}/${{ env.DOTNET_ASSEMBLY_DIRNAME }}
        run: npx nswag aspnetcore2openapi /assembly:./${{ env.API_ASSEMBLY_NAME }} /output:../../${{ env.OPENAPI_OUTPUT_DIRNAME }}/${{ env.CODE_OPENAPI_FILENAME }}

      - name: Comparing API Contracts
        working-directory: ${{ env.OPENAPI_OUTPUT_DIRNAME }}
        run: |
          docker run --rm -t -v $(pwd):/data:ro tufin/oasdiff -breaking-only -format text -base /data/${{ env.CADL_OPENAPI_FILENAME }} -revision /data/${{ env.CODE_OPENAPI_FILENAME }} > diff.breaking.txt
          docker run --rm -t -v $(pwd):/data:ro tufin/oasdiff -format text -base /data/${{ env.CADL_OPENAPI_FILENAME }} -revision /data/${{ env.CODE_OPENAPI_FILENAME }} > diff.detailed.txt
          docker run --rm -t -v $(pwd):/data:ro tufin/oasdiff -summary -format text -base /data/${{ env.CADL_OPENAPI_FILENAME }} -revision /data/${{ env.CODE_OPENAPI_FILENAME }} > diff.summary.txt
          docker run --rm -t -v $(pwd):/data:ro tufin/oasdiff -summary -format yaml -base /data/${{ env.CADL_OPENAPI_FILENAME }} -revision /data/${{ env.CODE_OPENAPI_FILENAME }} > diff.detailed.json

      - name: Archive API contract differences
        uses: actions/upload-artifact@v3
        with:
          name: apidiff
          path: |
            ${{ env.OPENAPI_OUTPUT_DIRNAME }}/*